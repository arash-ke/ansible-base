---
- name: Ensure user {{ system_user.key }}
  ansible.builtin.user:
    name: "{{ system_user.key }}"
    comment: "{{ system_user.value.name | default(omit) }}"
    shell: "{{ os.default_shell | default('/bin/bash') }}"
  register: user_info
  tags:
    - Ensure User
- name: Ensure user password for {{ system_user.key }}
  ansible.builtin.user:
    name: "{{ system_user.key }}"
    password: "{{ system_user.value.password }}"
  when: system_user.value.password is defined
  tags:
    - Set User Password
- name: Remove password for {{ system_user.key }}
  ansible.builtin.user:
    name: "{{ system_user.key }}"
    password: "{{ os.disabled_password | default('!') }}"
  when: system_user.value.password is not defined
  tags:
    - Set User Password
- name: Apply Auth key of {{ system_user.key }}
  ansible.posix.authorized_key:
    user: "{{ system_user.key }}"
    state: present
    key: "{{ lookup('file', item) }}"
    comment: "{{ system_user.value.name | default(system_user.key) }}"
    exclusive: true
  loop: "{{ query('first_found', env_ssh_keys_path + '/' + system_user.key + '.pub', errors='ignore') }}"
  tags:
    - Ensure User Authkey
- name: Generate groups for {{ system_user.key }}
  generate_user_groups:
    user_groups: "{{ system_user.value.groups | default(None) }}"
    user_roles: "{{ system_user.value.roles | default(None) }}"
    system_roles: "{{ system_roles }}"
    host_roles: "{{ roles | default(None) }}"
    current_groups: "{{ user_info.groups | default(omit) }}"
  register: user_groups
  tags:
    - Ensure User Groups
- name: Ensure groups for {{ system_user.key }}
  ansible.builtin.user:
    name: "{{ system_user.key }}"
    groups: "{{ user_groups.groups }}"
  diff: true
  tags:
    - Ensure User Groups
- name: Ensure skel for {{ system_user.key }}
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ user_info.home }}/"
    owner: "{{ user_info.name }}"
    group: "{{ user_info.group }}"
    mode: "{{ item.mode | default(omit) }}"
  loop: "{{ q('filetree', files_path + '/skel') }}"
  loop_control:
    label: "{{ item.path }}"
  when: not system_user.value.skip_skel | default(False)
